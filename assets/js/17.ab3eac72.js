(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{385:function(n,e,s){"use strict";s.r(e);var t=s(25),a=Object(t.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[n._v("#")]),n._v(" 准备")]),n._v(" "),s("p",[s("strong",[n._v("本地安装环境")])]),n._v(" "),s("ul",[s("li",[n._v("本地需要安装node环境。进入"),s("a",{attrs:{href:"https://nodejs.org/zh-cn/download/",target:"_blank",rel:"noopener noreferrer"}},[n._v("node.js"),s("OutboundLink")],1),n._v("官网下载安装包，下载后根据指示进行安装即可。")]),n._v(" "),s("li",[n._v("本地需要安装VsCode。进入"),s("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Visual Studio Code"),s("OutboundLink")],1),n._v("官网下载安装包，下载后根据指示进行安装即可。")])]),n._v(" "),s("p",[s("strong",[n._v("项目安装运行")])]),n._v(" "),s("ul",[s("li",[n._v("打开VsCode，运行"),s("code",[n._v("npm install")]),n._v("或"),s("code",[n._v("cnpm install")]),n._v("进行安装，如果本地环境有yarn，也可以用yarn安装。")])]),n._v(" "),s("p",[s("strong",[n._v("项目结构")])]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("  ├── build                      # 构建相关\n  ├── mock                       # 项目mock 模拟数据\n  ├── node_modules               # 安装的依赖\n  ├── plop-templates             # 基本模板\n  ├── public                     # 静态资源\n  │   │── config.js              # 服务地址配置文件\n  │   │── favicon.ico            # favicon图标\n  │   └── index.html             # html模板\n  ├── src                        # 源代码\n  │   ├── api                    # 所有请求\n  │   ├── assets                 # 主题 字体等静态资源\n  │   ├── components             # 全局公用组件\n  │   ├── directive              # 全局指令\n  │   ├── filters                # 全局 filter\n  │   ├── icons                  # 项目所有 svg icons\n  │   ├── lang                   # 国际化 language\n  │   ├── layout                 # 全局 layout\n  │   ├── router                 # 路由\n  │   ├── store                  # 全局 store管理\n  │   ├── styles                 # 全局样式\n  │   ├── utils                  # 全局公用方法\n  │   ├── vendor                 # 公用vendor\n  │   ├── views                  # views 所有页面\n  │   ├── App.vue                # 入口页面\n  │   ├── main.js                # 入口文件 加载组件 初始化等\n  │   └── permission.js          # 权限管理\n  ├── tests                      # 测试\n  ├── .env.xxx                   # 环境变量配置\n  ├── .eslintrc.js               # eslint 配置项\n  ├── .babelrc                   # babel-loader 配置\n  ├── .travis.yml                # 自动化CI配置\n  ├── vue.config.js              # vue-cli 配置\n  ├── postcss.config.js          # postcss 配置\n  └── package.json               # package.json\n")])])]),s("p",[s("strong",[n._v("项目框架")])]),n._v(" "),s("p",[n._v("提供项目框架方便对照框架来查阅文档。")]),n._v(" "),s("ul",[s("li",[n._v("在docs目录下有admin-frame.zip，如下图所示：")])]),n._v(" "),s("img",{attrs:{src:n.$withBase("/image/frame/frame-position.png"),alt:"项目框架位置"}}),n._v(" "),s("ul",[s("li",[n._v("将该压缩包拷贝到本地新建的文件夹中（注意不要在svn路径下），解压后执行"),s("code",[n._v("npm install")]),n._v("或"),s("code",[n._v("cnpm install")]),n._v("，依赖安装完成后执行"),s("code",[n._v("npm run dev")]),n._v("，启动项目后会看到如下页面：")])]),n._v(" "),s("img",{attrs:{src:n.$withBase("/image/frame/frame-login.png"),alt:"框架登录页"}}),n._v(" "),s("p",[n._v("输入账号、密码后进入到首页（账号密码可以随意输入）。")])])}),[],!1,null,null,null);e.default=a.exports}}]);